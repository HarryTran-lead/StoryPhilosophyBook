import React, { useMemo, useRef, useState, useEffect } from "react";
import HTMLFlipBook from "react-pageflip";
import { ChevronLeft, ChevronRight, Home, BookOpenCheck } from "lucide-react";
import { useNavigate } from "react-router-dom";
import Header from "../components/Header"; 
import "../styles/BookTheme.css";
import "../styles/BookAnimations.css";
import "../styles/PhilosophyStoryBook.css"; // import CU·ªêI

const PhilosophyStoryBook = () => {
  const navigate = useNavigate();
  const flipRef = useRef(null);
const [pageSize, setPageSize] = useState({ w: 520, h: 700 });

  // ============= SPREADS (gi·ªØ nguy√™n n·ªôi dung c·ªßa b·∫°n) =============
  const spreads = useMemo(
    () => [
      {
        left: null,
        right: (
          <div className="page-content cover-front">
            <div className="cover-design">
              <div className="cover-stars">
                <div className="star star-1"></div>
                <div className="star star-2"></div>
                <div className="star star-3"></div>
                <div className="star star-4"></div>
                <div className="star star-5"></div>
              </div>
              <div className="cover-ornament top"></div>
              <div className="cover-title">
                <div className="title-backdrop"></div>
                <h1 className="main-title">
                  <span className="title-line-1">TRI·∫æT L√ù</span>
                  <span className="title-line-2">CU·ªòC S·ªêNG</span>
                </h1>
                <div className="subtitle">Nh·ªØng Suy Ng·∫´m V·ªÅ ƒê·ªùi Ng∆∞·ªùi</div>
              </div>
              <div className="cover-quote">
                <div className="quote-marks">"</div>
                <div className="quote-text">
                  Cu·ªôc s·ªëng kh√¥ng ph·∫£i l√† t√¨m ki·∫øm b·∫£n th√¢n,<br />
                  m√† l√† t·∫°o d·ª±ng b·∫£n th√¢n
                </div>
                <div className="quote-author">‚Äî George Bernard Shaw</div>
                <div className="quote-marks closing">"</div>
              </div>
              <div className="cover-ornament bottom"></div>
              <div className="cover-glow"></div>
            </div>
          </div>
        ),
      },

      // ======== Ch.I ========
      {
        left: (
          <div className="page-content page-left">
            <div className="page-header">
              <h2>Ch∆∞∆°ng I</h2>
              <div className="chapter-ornament">‚ù¶</div>
            </div>
            <div className="page-body">
              <h3>B·∫£n Ch·∫•t Con Ng∆∞·ªùi</h3>
              <p className="first-letter">
                Con ng∆∞·ªùi sinh ra kh√¥ng ph·∫£i ƒë·ªÉ t·ªìn t·∫°i, m√† ƒë·ªÉ s·ªëng. S·ª± kh√°c bi·ªát gi·ªØa "t·ªìn t·∫°i" v√† "s·ªëng" ch√≠nh l√† √Ω th·ª©c v·ªÅ b·∫£n th√¢n v√† kh·∫£ nƒÉng t·∫°o ra √Ω nghƒ©a.
              </p>
              <p>
                Aristotle t·ª´ng n√≥i: "Con ng∆∞·ªùi l√† ƒë·ªông v·∫≠t c√≥ l√Ω tr√≠". Nh∆∞ng l√Ω tr√≠ kh√¥ng ch·ªâ l√† kh·∫£ nƒÉng suy nghƒ©, m√† c√≤n l√† kh·∫£ nƒÉng ch·ªçn l·ª±a, quy·∫øt ƒë·ªãnh v√† ch·ªãu tr√°ch nhi·ªám cho nh·ªØng l·ª±a ch·ªçn ƒë√≥.
              </p>
              <div className="philosophy-quote">
                <div className="quote-symbol">‚ùù</div>
                <p>"T√¥i t∆∞ duy, v·∫≠y t√¥i t·ªìn t·∫°i"</p>
                <div className="quote-author">‚Äî Ren√© Descartes</div>
              </div>
            </div>
            <div className="page-number">2</div>
          </div>
        ),
        right: (
          <div className="page-content page-right">
            <div className="reflection-box">
              <div className="reflection-title">Suy Ng·∫´m</div>
              <p>
                M·ªói con ng∆∞·ªùi ƒë·ªÅu mang trong m√¨nh m·ªôt v≈© tr·ª• ri√™ng - v·ªõi nh·ªØng ∆∞·ªõc m∆°, n·ªói s·ª£, ni·ªÅm vui v√† n·ªói bu·ªìn. Vi·ªác hi·ªÉu ƒë∆∞·ª£c b·∫£n th√¢n kh√¥ng ph·∫£i l√† ƒë√≠ch ƒë·∫øn, m√† l√† h√†nh tr√¨nh su·ªët ƒë·ªùi.
              </p>
            </div>
            <div className="wisdom-section">
              <h4>Ba T·∫ßng √ù Th·ª©c</h4>
              <div className="wisdom-item">
                <span className="wisdom-number">1</span>
                <div>
                  <strong>√ù th·ª©c b·ªÅ m·∫∑t:</strong> Nh·ªØng g√¨ ch√∫ng ta nh·∫≠n bi·∫øt tr·ª±c ti·∫øp
                </div>
              </div>
              <div className="wisdom-item">
                <span className="wisdom-number">2</span>
                <div>
                  <strong>Ti·ªÅm th·ª©c:</strong> Nh·ªØng kinh nghi·ªám v√† k√Ω ·ª©c ƒë∆∞·ª£c l∆∞u gi·ªØ
                </div>
              </div>
              <div className="wisdom-item">
                <span className="wisdom-number">3</span>
                <div>
                  <strong>V√¥ th·ª©c t·∫≠p th·ªÉ:</strong> Tr√≠ tu·ªá chung c·ªßa nh√¢n lo·∫°i
                </div>
              </div>
            </div>
            <div className="page-number">3</div>
          </div>
        ),
      },

      // TODO: th√™m c√°c spread Ch. II, III, IV ·ªü ƒë√¢y

      // ======== K·∫øt & B√¨a sau ========
      {
        left: (
          <div className="page-content page-left">
            <div className="final-content">
              <div className="conclusion-title">
                <h2>H√†nh Tr√¨nh Kh√¥ng ƒêi·ªÉm ƒê·∫øn</h2>
              </div>
              <div className="final-wisdom">
                <p>
                  Tri·∫øt h·ªçc kh√¥ng ph·∫£i l√† b·ªô s∆∞u t·∫≠p nh·ªØng c√¢u tr·∫£ l·ªùi, m√† l√† ngh·ªá thu·∫≠t ƒë·∫∑t ra nh·ªØng c√¢u h·ªèi ƒë√∫ng. Cu·ªôc s·ªëng kh√¥ng ph·∫£i l√† v·∫•n ƒë·ªÅ c·∫ßn gi·∫£i quy·∫øt, m√† l√† b√≠ ·∫©n c·∫ßn tr·∫£i nghi·ªám.
                </p>
                <div className="life-summary">
                  <div className="summary-item">
                    <span className="summary-icon">üé≠</span>
                    <p><strong>S·ªëng ch√¢n th·∫≠t</strong> v·ªõi ch√≠nh m√¨nh</p>
                  </div>
                  <div className="summary-item">
                    <span className="summary-icon">üåü</span>
                    <p><strong>T·∫°o ra √Ω nghƒ©a</strong> qua h√†nh ƒë·ªông</p>
                  </div>
                  <div className="summary-item">
                    <span className="summary-icon">üíù</span>
                    <p><strong>Y√™u th∆∞∆°ng</strong> kh√¥ng ƒëi·ªÅu ki·ªán</p>
                  </div>
                </div>
              </div>
            </div>
            <div className="page-number">10</div>
          </div>
        ),
        right: (
          <div className="page-content cover-back">
            <div className="back-cover-design">
              <div className="back-stars">
                <div className="star star-1"></div>
                <div className="star star-2"></div>
                <div className="star star-3"></div>
              </div>
              <div className="back-ornament top"></div>
              <div className="back-title">
                <div className="back-title-backdrop"></div>
                <h1>V√î T·∫¨N</h1>
                <div className="infinity-symbol">‚àû</div>
              </div>
              <div className="back-quote">
                <div className="back-quote-text">
                  "Cu·ªëi m·ªói cu·ªën s√°ch<br />l√† kh·ªüi ƒë·∫ßu c·ªßa m·ªôt cu·ªën kh√°c"
                </div>
                <div className="back-quote-divider"></div>
                <div className="back-quote-text">
                  "Cu·ªôc s·ªëng l√† h√†nh tr√¨nh,<br />kh√¥ng ph·∫£i ƒëi·ªÉm ƒë·∫øn"
                </div>
              </div>
              <div className="back-message">
                H√£y ti·∫øp t·ª•c kh√°m ph√°<br />nh·ªØng tri·∫øt l√Ω m·ªõi m·ªói ng√†y
              </div>
              <div className="back-ornament bottom"></div>
              <div className="back-glow"></div>
            </div>
          </div>
        ),
      },
    ],
    []
  );

  // ============= Map spreads -> pages cho HTMLFlipBook =============
  // Quy ∆∞·ªõc: showCover=true, n√™n page 0 = b√¨a ph·∫£i (spreads[0].right)
  // Trang ti·∫øp theo: spread1.left, spread1.right, ... t·ªõi spreadN.left, spreadN.right (b√¨a sau)
  const pages = useMemo(() => {
    const arr = [];

    // 0) B√¨a tr∆∞·ªõc (right c·ªßa spread 0)
    arr.push(
      <div className="page" key="cover-front">
        {/* .page-content ƒë√£ n·∫±m trong spreads[0].right */}
        {spreads[0].right}
      </div>
    );

    // 1) C√°c spreads c√≤n l·∫°i (left r·ªìi right n·∫øu c√≥)
    for (let i = 1; i < spreads.length; i++) {
      const s = spreads[i];
      if (s.left) {
        arr.push(
          <div className="page" key={`p-${i}-L`}>
            {s.left}
          </div>
        );
      }
      if (s.right) {
        arr.push(
          <div className="page" key={`p-${i}-R`}>
            {s.right}
          </div>
        );
      }
    }

    return arr;
  }, [spreads]);
  useEffect(() => {
  const calc = () => {
    const vw = Math.min(window.innerWidth, 1400);
    const vh = window.innerHeight;

    // book chi·∫øm ~80% chi·ªÅu cao, m·ªói trang t·ªâ l·ªá ~0.74 (520/700)
    const targetBookH = Math.min(Math.round(vh * 0.8), 900);
    const pageWFromH = Math.round(targetBookH * 0.74);

    // m·ªói TRANG chi·∫øm ~38‚Äì42% viewport width, cap 680
    const pageWFromW = Math.round(vw * 0.40);

    const w = Math.min(680, Math.max(360, Math.min(pageWFromH, pageWFromW)));
    const h = Math.round(w / 0.74);
    setPageSize({ w, h });
  };
  calc();
  window.addEventListener("resize", calc);
  return () => window.removeEventListener("resize", calc);
}, []);

  // Theo d√µi trang hi·ªán t·∫°i & t√≠nh spread index ƒë·ªÉ hi·ªÉn th·ªã indicator / n√∫t Quiz
  const [currentPage, setCurrentPage] = useState(0); // 0-based page in FlipBook
  const currentSpread = Math.min(spreads.length - 1, Math.ceil(currentPage / 2)); // 0=cover, 1,2,...
  const atFinalSpread = currentSpread === spreads.length - 1;

  const canPrev = currentPage > 0;
  const canNext = currentPage < pages.length - 1;

  const onFlip = (e) => {
    setCurrentPage(e.data); // e.data = current page index
  };

  // L·∫≠t b·∫±ng b√†n ph√≠m
  useEffect(() => {
    const onKey = (e) => {
      if (e.key === "ArrowRight") flipRef.current?.pageFlip().flipNext();
      if (e.key === "ArrowLeft")  flipRef.current?.pageFlip().flipPrev();
    };
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, []);

  return (
   <div className="philo-book">
  <Header /> {/* hero c√≥ BG Unsplash */}

  <div className="page-with-header">
    <div className="book-scene">
      <div className="book-container book-dark">
        {/* Back v·ªÅ Home */}
     

        {/* g√°y s√°ch */}
        <div className="book-spine">
          <div className="spine-text">TRI·∫æT L√ù CU·ªòC S·ªêNG</div>
        </div>

        <HTMLFlipBook
          ref={flipRef}
          className="html-flip-book"
          width={pageSize.w}
          height={pageSize.h}
          showCover
          maxShadowOpacity={0.5}
          drawShadow
          mobileScrollSupport
          onFlip={onFlip}
        >
          {pages}
        </HTMLFlipBook>

        {/* N√∫t ƒëi·ªÅu h∆∞·ªõng */}
        <div className="navigation nav-prev">
          <button
            className="nav-button"
            onClick={() => flipRef.current?.pageFlip().flipPrev()}
            disabled={!canPrev}
            aria-label="Trang tr∆∞·ªõc"
            title="Trang tr∆∞·ªõc"
          >
            <ChevronLeft size={24} />
          </button>
        </div>

        <div className="navigation nav-next">
          <button
            className="nav-button"
            onClick={() => flipRef.current?.pageFlip().flipNext()}
            disabled={!canNext}
            aria-label="Trang sau"
            title="Trang sau"
          >
            <ChevronRight size={24} />
          </button>
        </div>

        {/* Ch·ªâ s·ªë spread */}
        <div className="page-indicator">
          Trang {Math.min(currentSpread + 1, spreads.length)} / {spreads.length}
        </div>

     
      </div>
    </div>
  </div>
</div>

  );
};

export default PhilosophyStoryBook;
